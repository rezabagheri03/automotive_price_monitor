version: '3.8'

services:
  app:
    build: .
    container_name: automotive_app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DB_HOST=db
      - REDIS_HOST=redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
    depends_on:
      - db
      - redis
    networks:
      - automotive_network

  db:
    image: mysql:8.0
    container_name: automotive_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init_db.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups
    ports:
      - "3306:3306"
    networks:
      - automotive_network
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: automotive_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - automotive_network

  nginx:
    image: nginx:alpine
    container_name: automotive_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf
      - ./dashboard/static:/var/www/html/static
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - automotive_network

  scheduler:
    build: .
    container_name: automotive_scheduler
    restart: unless-stopped
    command: python -m celery -A tasks.celery worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - DB_HOST=db
      - REDIS_HOST=redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - db
      - redis
    networks:
      - automotive_network

  backup:
    build: .
    container_name: automotive_backup
    restart: "no"
    command: python scripts/backup_database.py
    environment:
      - DB_HOST=db
    volumes:
      - ./backups:/app/backups
    depends_on:
      - db
    networks:
      - automotive_network
    profiles:
      - backup

volumes:
  mysql_data:
  redis_data:

networks:
  automotive_network:
    driver: bridge
